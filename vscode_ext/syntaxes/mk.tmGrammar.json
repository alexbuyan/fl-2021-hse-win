{
  "scopeName": "source.abc",
  "patterns": [{ "include": "#expression" }],
  "repository": {
    "expression": {
      "patterns": [
        { "include": "#kw" },
        { "include": "#num" },
        { "include": "#str" },
        { "include": "#func-def" },
        { "include": "#builtins" },
        { "include": "#comment" }
      ]
    },
    "kw": {
      "match": "\\b(False|True|None|and|with|as|assert|break|class|continue|def|del|elif|else|except|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|raise|return|try|while|yield)\\b",
      "name": "keyword.control"
    },
    "num": {
      "match": "([0-9]+.?[0-9]*)",
      "name": "constant.numeric"
    },
    "str": {
      "begin": "\"",
      "end": "\"",
      "name": "string.quoted.double"
    },
    "func-def": {
      "match": "\\b([a-zA-z][_a-zA-Z0-9]*)\\b *(?=\\(.*\\)\\s*\\:)",
      "name": "variable.function"
    },
    "builtins": {
      "match": "\\b(abs|all|any|ascii|bin|bool|breakpoint|bytearray|bytes|callable|chr|classmethod|compile|complex|delattr|dict|dir|divmod|enumerate|eval|exec|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|isinstance|issubclass|iter|len|list|locals|map|max|memoryview|min|next|object|oct|open|ord|pow|print|property|range|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|vars|zip|__import__)\\b",
      "name": "constant.language"
    },
    "comment": {
      "begin": "\\#",
      "end": "\\n",
      "name": "comment.line"
    }
  }
}